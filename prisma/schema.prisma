// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// generator docs {
//   provider = "node node_modules/prisma-docs-generator"
//   output   = "../docs"
// }

// generator erd {
//   provider = "node node_modules/prisma-erd-generator"
//   output   = "../docs/ERD.svg"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model University {
  id   String  @id @default(uuid()) @db.Uuid
  slug String? @unique

  name        String   @unique
  description String
  tags        String[]
  image       String?
  logo        String?

  projects Project[]

  @@map("university")
}

model Company {
  id   String  @id @default(uuid()) @db.Uuid
  slug String? @unique

  name        String   @unique
  description String
  tags        String[]
  image       String?
  logo        String?

  projects Project[]

  @@map("company")
}

model Project {
  id   String  @id @default(uuid()) @db.Uuid
  slug String? @unique

  name         String      @unique
  description  String
  tags         String[]
  image        String?
  University   University? @relation(fields: [universityId], references: [id])
  universityId String?     @db.Uuid
  Company      Company?    @relation(fields: [companyId], references: [id])
  companyId    String?     @db.Uuid

  researchers       Researcher[]
  ResearcherProject ResearcherProject[]

  @@map("project")
}

model ResearcherProject {
  id String @id @default(uuid()) @db.Uuid

  projectId String  @db.Uuid
  project   Project @relation(fields: [projectId], references: [id])

  research     Researcher @relation(fields: [researcherId], references: [id])
  researcherId String     @db.Uuid

  role String?
}

model Researcher {
  id   String  @id @default(uuid()) @db.Uuid
  slug String? @unique

  name        String   @unique
  description String
  tags        String[]
  image       String?

  type              Researchers         @default(Professor)
  project           Project?            @relation(fields: [projectId], references: [id])
  projectId         String?             @db.Uuid
  ResearcherProject ResearcherProject[]
}

enum Researchers {
  Student
  Professor
  Expert
  Volunteer
}
